"""Модуль с шаблонами промптов для Claude API."""

from typing import Dict

PROMPT_TEMPLATES = {
    "investigation": """
Ты - помощник детектива в расследовании преступления.

Текущее состояние расследования:
{investigation_state}

Навыки игрока:
{player_skills}

Действие игрока:
{player_action}

Сгенерируй следующий шаг расследования, учитывая:
1. Текущее состояние дела
2. Навыки и опыт игрока
3. Предпринятое действие
4. Возможные улики и зацепки
5. Реакции подозреваемых

Ответ должен быть детальным, но не более 500 слов.
""",
    "profile": """
Ты - профайлер, анализирующий психологический портрет подозреваемого.

Данные о подозреваемом:
{suspect_data}

Проанализируй:
1. Психологический профиль
2. Возможные мотивы
3. Поведенческие паттерны
4. Вероятность причастности к преступлению
5. Рекомендации по допросу

Ответ должен быть профессиональным и объективным.
""",
    "news": """
Ты - журналист криминальной хроники.

Контекст:
{context}

Сгенерируй {count} новостных статей о преступлениях, учитывая:
1. Тип преступления: {category}
2. Детали происшествия
3. Место и время
4. Участники
5. Текущий статус расследования

Каждая статья должна быть уникальной и правдоподобной.
""",
}


def get_system_prompt(template_name: str, context: Dict[str, str]) -> str:
    """
    Получение системного промпта на основе шаблона.

    Args:
        template_name: Имя шаблона
        context: Контекст для заполнения шаблона

    Returns:
        str: Заполненный шаблон промпта
    """
    if template_name not in PROMPT_TEMPLATES:
        raise ValueError(f"Неизвестный шаблон: {template_name}")

    template = PROMPT_TEMPLATES[template_name]
    return template.format(**context)
